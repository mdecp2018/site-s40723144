{"pages":[{"title":"About","text":"2018 Fall 40723144豪樹的網誌 課程倉儲: https://mdecp2018.github.io/site-s40723144 課程投影片: hhttps://mdecp2018.github.io/site-s40723144/reveal 課程網誌: https://mdecp2018.github.io/site-s40723144/reveal","tags":"misc","url":"./pages/about/"},{"title":"國立虎尾科技大學機械設計工程系電腦輔助設計實習 - s40723144說明如何利用 p37 中的 git 建立個人的 Github Pages 網站(week1)","text":"首先先用 g: 進入自己隨聲諜的G槽中 接著使用 cd \\ 回到初始的G槽 然後到github自己的倉儲中 git clone 下資料到自己創立在G槽的資料夾中 再藉著資料夾中wsgi.py輸入 python wsgi.py 的指令進入到靜態的倉儲中更改資料 接著案 generate_pages 保存資料 再以 git add . 保存更改過的動作 再以 git commit 的指令提交至自己的倉儲中 最後以 git push 把資料推上自己的倉儲 END","tags":"Misc","url":"./20181108-1.html"},{"title":"國立虎尾科技大學機械設計工程系電腦輔助設計實習 - s40723144 2a-week2 說明如何管理網際投影片與網誌(week2)","text":"國立虎尾科技大學機械設計工程系電腦輔助設計實習 - s40723144 2a-week2 說明如何管理網際投影片與網誌(week2) 首先先開啟編輯器放入 http-server.py 的靜端模擬啟動器 接著點擊上方的tool的go來驅動靜端 接著打開瀏覽器搜尋網址https://localhost:8444/content/index.html進到靜端 打開後會看到上面有一排的目錄，先點擊管理投影店的reveal查看哪裡需要更改 再來打開管理投影片和部落格更改的Leo，將 reveal.leo 的檔案開啟修改 根據它所對應的位置去做修改比如我今天想傳影片到數學方程式符號的那個位置，我就到相對的leo檔的那個位置去做修改 修改完後再點擊左上方File的儲存save就完成初步的修改了 再來是比較麻煩的網誌、部落格的修改首先要先打開Leo開啟部落格pelican.leo的檔案 接著要查看遠端的 SITEURL 是否是你部落格的網址和，位置名稱 DISQUS_SITENAME 是否是 mdecp2018 ，才能順利地連上部落格 更改完後一樣點擊save，接著點擊屬於部落格的近端 遠端的相連\\ 先將滑鼠移動到上方靜端的 local-blog 點擊右鍵的Goto -blog執行完畢後，相同的步驟也對遠端的 github-blog 做執行就能進入靜態中部落格去做管理 一樣根據相對的位置我們從leo去做編輯比如說我們今天更動的是主頁下面2018 Fall 分組網誌的部分那我們就去找到相對的位置去做更動接著再按save和近端'、遠端的執行做初步的保存動作 接著再開啟p37完成最後的繳交動作連同前面的投影片的繳交就完成所有的編制啦 END 補充如果要貼影片請按影片下分享的嵌入複製一份指令貼上及可\\","tags":"Misc","url":"./20181108-2.html"},{"title":"國立虎尾科技大學機械設計工程系電腦輔助設計實習 -s40723144 2a-week3 git 基本操作練習(week3)","text":"國立虎尾科技大學機械設計工程系電腦輔助設計實習 -s40723144 2a-week3 git 基本操作練習 首先進到C槽以 mkdir 增加一個test的資料夾 接著進到test以 git init 初始化SciTE編輯器的目錄 然後從上面的Options打開Open global Options File的程式碼查看第137行是否有改變 再test的目錄存檔以myprogram.txt的名子存檔起來接著關掉編輯器 然後再以Dos的命令中輸入 y:\\SciTE\\bin\\Scl.exe 的指令將編輯器開啟 接著輸入繼續再存檔在myprogram.txt的txt檔中 然後再輸入 git add myprogram.txt 和 git commit -m \"intial add\" 使倉儲做第一次改版的動作 繼續再myprogram空兩格輸入first function儲存一樣輸入上述兩個指令做第二次的改版 接著繼續輸入second function做最後一次改版的動作 最後輸入 git log 的指令找尋前面執行的動作 再以 git checkout 加前面七碼 的指令回到fitst function狀況做查看 然後到test拉選myprogram.txt檔案進編輯器試驗我們真的成功回到fitst function狀況 就達成我們今天以checkout查看前面狀態指令的目的了 END","tags":"Misc","url":"./20181108-3.html"}]}